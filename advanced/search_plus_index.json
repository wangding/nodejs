{"./":{"url":"./","title":"简介","keywords":"","body":"Node.js 高级实战 本网站包含 Node.js 高级实战课程的全部教学资料，包括：课程大纲、学习交流 QQ 群、课程视频、通关任务以及示例代码。 课程大纲 Node.js 高级实战课程大纲 通关任务 按课程讲授的顺序，排列在电子书左侧导航中，所有通关任务对应有参考的示例代码，请见下面 nodejs-advanced-demo 仓库的链接。 示例代码 Demo Code 2018 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"082a682f79b163ab6198\",\"clientSecret\":\"f872143a272619b840ea2a1838f1316aa38ba994\",\"repo\":\"nodejs\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"nodejs\"],\"id\":\"/README.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"082a682f79b163ab6198\",\"clientSecret\":\"f872143a272619b840ea2a1838f1316aa38ba994\",\"repo\":\"nodejs\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"nodejs\"],\"id\":\"/README.html\"});gitalk.render(\"gitalk-container\"); "},"01-async.html":{"url":"01-async.html","title":"第一课：JavaScript 异步编程","keywords":"","body":"2018 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"082a682f79b163ab6198\",\"clientSecret\":\"f872143a272619b840ea2a1838f1316aa38ba994\",\"repo\":\"nodejs\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"nodejs\"],\"id\":\"/01-async.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"082a682f79b163ab6198\",\"clientSecret\":\"f872143a272619b840ea2a1838f1316aa38ba994\",\"repo\":\"nodejs\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"nodejs\"],\"id\":\"/01-async.html\"});gitalk.render(\"gitalk-container\"); "},"02-http.html":{"url":"02-http.html","title":"第二课：HTTP 编程概述","keywords":"","body":"2018 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"082a682f79b163ab6198\",\"clientSecret\":\"f872143a272619b840ea2a1838f1316aa38ba994\",\"repo\":\"nodejs\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"nodejs\"],\"id\":\"/02-http.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"082a682f79b163ab6198\",\"clientSecret\":\"f872143a272619b840ea2a1838f1316aa38ba994\",\"repo\":\"nodejs\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"nodejs\"],\"id\":\"/02-http.html\"});gitalk.render(\"gitalk-container\"); "},"03-middleware.html":{"url":"03-middleware.html","title":"第三课：中间件","keywords":"","body":"第 3 章 中间件 阅读 Koa API 资料 Koa 中文版 Koa 官网 hello world 要求： 创建 03-hello-world 目录 编写 app.js 脚本 引入 koa 模块 实例化 koa 对象，监听 8080 端口 加载一个 koa 中间件（M-hello） 在中间件中对 HTTP 请求，返回 hello world 信息 用 curl 命令测试脚本程序 logger 中间件 要求： 创建 04-middleware 目录 编写 01-logger.js 脚本 引入 koa 模块 实例化 koa 对象，监听 8080 端口 除了加载上一个任务的 M-hello 中间件 在 M-hello 中间件之前加载 M-logger 中间件 M-logger 中间件可以在控制台打印 HTTP 请求方法和请求的 URL 信息 确保两个中间件都会执行 用 curl 命令测试脚本程序 ms 中间件 要求： 编写 02-logger-ms.js 脚本 在上一个任务代码的基础上 在 M-logger 之后加载 M-ms 中间件 注意 M-ms 中间件在 M-hello 中间件之前加载 M-ms 中间件统计 M-hello 中间件执行的时长，并打印在控制台上 用 curl 命令测试脚本程序 中间件之间传递数据 要求： 编写 03-pass-data.js 脚本 在上一个任务代码的基础上 用三种方法，将 M-ms 中间件中统计的时长数据传递给 M-logger 中间件 三种方法分别是：响应头传递数据、return 返回数据和 ctx 传递数据 在 M-logger 中间件中打印时长信息 用 curl 命令测试脚本程序 logger 中间件增强版 要求： 编写 04-power-logger.js 脚本 在上一个任务代码的基础上 将 M-logger 和 M-ms 中间件的功能二合一 让 M-logger 中间件既可以打印 HTTP 请求方法 也可以打印 HTTP 请求的 URL 以及 M-hello 执行的时长 用 curl 命令测试脚本程序 单独封装的 logger 中间件 要求： 创建 middleware 子目录 把上一个任务中的 M-logger 中间件，单独封装成 logger.js 模块 把 logger.js 模块放在 middleware 目录下 编写 05-logger-middleware.js 脚本，功能跟上一个任务功能相同 只是调用单独封装的 logger.js 模块 用 curl 命令测试脚本程序 中间件中的异步任务 要求： 创建 lib 子目录 编写 lib/task.js 脚本 task.js 模拟一个异步任务，该任务执行的时长是（0~1000ms）之间的随机数 编写 06-middleware-await.js 脚本 在任务 6 代码的基础上 在 M-hello 中间件中执行异步任务 检查 M-logger 中间件统计的时长信息是否正确 用 curl 命令测试脚本程序 koa-logger 中间件 要求： 编写 07-koa-logger.js 脚本 在任务 2 代码的基础上 引入 koa-logger 中间件模块 在 M-hello 中间件之前加载 koa-logger 中间件 用 curl 命令测试脚本程序，观察服务程序在控制台输出的日志信息 2018 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"082a682f79b163ab6198\",\"clientSecret\":\"f872143a272619b840ea2a1838f1316aa38ba994\",\"repo\":\"nodejs\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"nodejs\"],\"id\":\"/03-middleware.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"082a682f79b163ab6198\",\"clientSecret\":\"f872143a272619b840ea2a1838f1316aa38ba994\",\"repo\":\"nodejs\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"nodejs\"],\"id\":\"/03-middleware.html\"});gitalk.render(\"gitalk-container\"); "},"04-router.html":{"url":"04-router.html","title":"第四课：路由器","keywords":"","body":"第 4 章 路由器 koa 原生路由 要求： 创建 05-router 目录 编写 01-origin-router.js 脚本 利用中间件解析漫画书作者的 HTTP API，接口规格如下：| method | URL | function | | ----- | ----------------------------- | -------------------------- | | GET | /api/authors/?page=1&limit=10 | 得到漫画书作者列表 | | GET | /api/authors/:authorName/ | 按作者名称查询 | | POST | /api/authors/ | 添加新的漫画书作者 | | PUT | /api/authors/:id | 修改某 ID 的漫画书作者信息 | | DELETE | /api/authors/:id | 删除某 ID 的漫画书作者信息 | 收到 HTTP 请求，根据路由信息，返回客户端成功信息 并在控制台打印该路由接口的功能描述 运行 curl 测试服务程序 koa-router 中间件 编写 02-koa-router.js 脚本 引入 koa-router 中间件 参考任务 1 的 API 规范，定义五个路由方法 使用路由前缀 每个路由方法中，返回客户端成功信息 并在控制台打印该路由接口的功能描述 运行 curl 测试服务程序 获取请求参数 编写 03-get-request-data.js 脚本 引入 koa-bodyparser 中间件 在上一个任务代码基础上 在第一个接口路由方法中，得到 URL 地址中的 page 和 limit 参数 并且得到请求头中的 user-agent 字段 将这些信息打印在控制台中 在第二个接口路由方法中，得到 authorName 参数，并打印到控制台 在第三个接口路由方法中，得到请求体中的 authorName 信息，并打印 在第四个接口路由方法中，得到 URL 地址中的 ID 信息 以及请求体中的 authorName 信息，并打印到控制台 在第五个接口路由方法中，得到 URL 地址中的 ID　信息，并打印 运行 curl 测试服务程序 koa 路由模块 编写 04-koa-router-module.js 脚本 在上一个任务代码基础上 把漫画书作责接口路由的五个方法封装成单独的路由模块 把路由模块放到 routes 子目录下 主程序中导入路由模块，并加载路由模块 运行 curl 测试服务程序 路由管理 编写 05-router-manager.js 脚本 参考漫画书作者路由模块，编写 tags 和 areas 路由模块 在主程序中引入 require-directory 模块 利用 require-directory 模块导入 routes 目录下的所有路由模块 运行 curl 测试服务程序 2018 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"082a682f79b163ab6198\",\"clientSecret\":\"f872143a272619b840ea2a1838f1316aa38ba994\",\"repo\":\"nodejs\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"nodejs\"],\"id\":\"/04-router.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"082a682f79b163ab6198\",\"clientSecret\":\"f872143a272619b840ea2a1838f1316aa38ba994\",\"repo\":\"nodejs\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"nodejs\"],\"id\":\"/04-router.html\"});gitalk.render(\"gitalk-container\"); "},"05-mysql.html":{"url":"05-mysql.html","title":"第五课：数据库访问","keywords":"","body":"2018 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"082a682f79b163ab6198\",\"clientSecret\":\"f872143a272619b840ea2a1838f1316aa38ba994\",\"repo\":\"nodejs\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"nodejs\"],\"id\":\"/05-mysql.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"082a682f79b163ab6198\",\"clientSecret\":\"f872143a272619b840ea2a1838f1316aa38ba994\",\"repo\":\"nodejs\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"nodejs\"],\"id\":\"/05-mysql.html\"});gitalk.render(\"gitalk-container\"); "},"06-http-api.html":{"url":"06-http-api.html","title":"第六课：HTTP 接口服务","keywords":"","body":"HTTP API 接口服务 koa2 代码生成器 要求： 检查 koa2 代码生成器软件是否安装，koa2 --version 安装 koa2 代码生成器软件，npm install -g koa-generator，如果已经安装跳过此步 用 koa2 代码生成器创建项目框架代码，koa2 -e 06-app 安装项目依赖，cd 06-app && npm install 运行程序，DEBUG=06-app:* npm start 用浏览器访问这个网站 查看框架代码的目录结构，搞明白每个文件夹的作用 查看阅读生成的代码文件 HTTP 接口服务 要求： 复制上一个任务代码文件夹为 07-api 去掉代码中的静态文件服务 去掉代码中的模板引擎渲染 添加 authors 路由模块 添加 authors 数据库访问模块 解决接口的跨域安全策略 给接口添加 HTTPS 机制 测试接口程序 静态文件服务 要求： 用 koa2 代码生成器创建 08-todo-list 应用 去掉代码中的模板引擎渲染 添加 tasks 路由模块 添加 tasks 数据库访问模块 解决接口的跨域安全策略 给接口添加 HTTPS 机制 测试接口程序 添加 todo-list 静态页面 测试程序 2018 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"082a682f79b163ab6198\",\"clientSecret\":\"f872143a272619b840ea2a1838f1316aa38ba994\",\"repo\":\"nodejs\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"nodejs\"],\"id\":\"/06-http-api.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"082a682f79b163ab6198\",\"clientSecret\":\"f872143a272619b840ea2a1838f1316aa38ba994\",\"repo\":\"nodejs\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"nodejs\"],\"id\":\"/06-http-api.html\"});gitalk.render(\"gitalk-container\"); "},"07-sequelize.html":{"url":"07-sequelize.html","title":"第七课：Sequelize ORM","keywords":"","body":"2018 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"082a682f79b163ab6198\",\"clientSecret\":\"f872143a272619b840ea2a1838f1316aa38ba994\",\"repo\":\"nodejs\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"nodejs\"],\"id\":\"/07-sequelize.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"082a682f79b163ab6198\",\"clientSecret\":\"f872143a272619b840ea2a1838f1316aa38ba994\",\"repo\":\"nodejs\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"nodejs\"],\"id\":\"/07-sequelize.html\"});gitalk.render(\"gitalk-container\"); "},"08-jwt.html":{"url":"08-jwt.html","title":"第八课：身份验证","keywords":"","body":"2018 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"082a682f79b163ab6198\",\"clientSecret\":\"f872143a272619b840ea2a1838f1316aa38ba994\",\"repo\":\"nodejs\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"nodejs\"],\"id\":\"/08-jwt.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"082a682f79b163ab6198\",\"clientSecret\":\"f872143a272619b840ea2a1838f1316aa38ba994\",\"repo\":\"nodejs\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"nodejs\"],\"id\":\"/08-jwt.html\"});gitalk.render(\"gitalk-container\"); "},"09-ejs.html":{"url":"09-ejs.html","title":"第九课：EJS 模板引擎","keywords":"","body":"2018 -  by 王顶. All rights reserved.本站访客人数  人次document.getElementsByClassName(\"bsz-this-year\")[0].innerHTML = new Date().getFullYear(); window.onload = function() {gitbook.events.on(\"page.change\", function() {var gitalk = new Gitalk({\"clientID\":\"082a682f79b163ab6198\",\"clientSecret\":\"f872143a272619b840ea2a1838f1316aa38ba994\",\"repo\":\"nodejs\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"nodejs\"],\"id\":\"/09-ejs.html\"});gitalk.render(\"gitalk-container\");});};var gitalk = new Gitalk({\"clientID\":\"082a682f79b163ab6198\",\"clientSecret\":\"f872143a272619b840ea2a1838f1316aa38ba994\",\"repo\":\"nodejs\",\"owner\":\"wangding\",\"admin\":[\"wangding\"],\"labels\":[\"nodejs\"],\"id\":\"/09-ejs.html\"});gitalk.render(\"gitalk-container\"); "}}